# Makefile for uClibc NPTL
#
# Copyright (C) 2009 Bernhard Reutner-Fischer <uclibc@uclibc.org>
#
# Licensed under the LGPL v2.1, see the file COPYING.LIB in this tarball.
#

libpthread_LINUX_ARCH_SSRC = pt-vfork.S
libpthread_LINUX_ARCH_CSRC = pthread_once.c pt-__syscall_error.c

libc_a_CSRC = fork.c
libc_a_SSRC = clone.S vfork.S

ARCH_OBJS += $(libc_a_SSRC:.S=.c)

CFLAGS += $(SSP_ALL_CFLAGS)
ifeq ($(UCLIBC_HAS_STDIO_FUTEXES),y)
CFLAGS-fork.c = -D__USE_STDIO_FUTEXES__
endif

CFLAGS-pthread_once.c = -DNOT_IN_libc=1 -DIS_IN_libpthread=1
CFLAGS-lowlevellock.c = -DNOT_IN_libc=1 -DIS_IN_libpthread=1
CFLAGS-pt-__syscall_error.c =  -DNOT_IN_libc=1 -DIS_IN_libpthread=1

ASFLAGS-pt-vfork.S = -DNOT_IN_libc=1 -DIS_IN_libpthread=1 -D_LIBC_REENTRANT -DUSE___THREAD
#ASFLAGS-libc-lowlevellock.S = -D_LIBC_REENTRANT  -DUSE___THREAD
#ASFLAGS-lowlevellock.S = -DNOT_IN_libc=1 -DIS_IN_libpthread=1 -D_LIBC_REENTRANT -DUSE___THREAD
ASFLAGS-clone.S = -D_LIBC_REENTRANT
ASFLAGS-vfork.S = -D_LIBC_REENTRANT

ifeq ($(UCLIBC_HAS_THREADS_NATIVE),y)
#Needed to use the correct SYSCALL_ERROR_HANDLER
ASFLAGS-clone.S += -DUSE___THREAD
ASFLAGS-vfork.S += -DUSE___THREAD
endif

LINUX_ARCH_DIR:=$(top_srcdir)libpthread/nptl/sysdeps/unix/sysv/linux/powerpc
LINUX_ARCH_OUT:=$(top_builddir)libpthread/nptl/sysdeps/unix/sysv/linux/powerpc
LINUX_ARCH_OBJ:=$(patsubst %.S,$(LINUX_ARCH_OUT)/%.o,$(libpthread_LINUX_ARCH_SSRC))
LINUX_ARCH_OBJ+=$(patsubst %.c,$(LINUX_ARCH_OUT)/%.o,$(libpthread_LINUX_ARCH_CSRC))

ifeq ($(DOPIC),y)
libpthread-a-y += $(LINUX_ARCH_OBJ:.o=.os)
else
libpthread-a-y += $(LINUX_ARCH_OBJ)
endif
libpthread-so-y += $(LINUX_ARCH_OBJ:.o=.oS)

libpthread-multi-y+=$(libpthread_LINUX_ARCH_CSRC)

LIBC_LINUX_ARCH_OBJ:=$(patsubst %.c,$(LINUX_ARCH_OUT)/%.o,$(libc_a_CSRC))
LIBC_LINUX_ARCH_OBJ+=$(patsubst %.S,$(LINUX_ARCH_OUT)/%.o,$(libc_a_SSRC))

libc-static-y+=$(LIBC_LINUX_ARCH_OBJ)
libc-shared-y+=$(LIBC_LINUX_ARCH_OBJ:.o=.oS)

libc-multi-y+=$(libc_a_CSRC)

objclean-y+=nptl_linux_arch_clean

nptl_linux_arch_clean:
	$(do_rm) $(addprefix $(LINUX_ARCH_OUT)/*., o os oS)
